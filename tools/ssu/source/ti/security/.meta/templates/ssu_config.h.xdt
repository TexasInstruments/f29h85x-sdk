#include "ssu.h"
%%{
    const Common = system.getScript('/ti/security/Common.js');
    let idx = 0;
    var linkID = Common.assignLinkID()
    var stackID = Common.assignStackID()
%%}

// C29x SSU LINKs
% Common.modInstances('/ti/security/Link').forEach(x => {
#define `x.$name` SSU_LINK`linkID[x.$name]`
% });

// C29x SSU STACKs
% Common.modInstances('/ti/security/Stack').forEach(x => {
#define `x.$name` SSU_STACK`stackID[x.$name]`
% });

// C29x SSU APRs
% let regions = Common.allocateAllMemoryRegions()[system.context]
% if(regions && regions.length){
% regions.sort((a,b) => {return a.name.localeCompare(b.name)})
%        .forEach(x => {
#define `x.name` `idx`
#define `x.name`_START_ADDR 0x`x.startAddr.toString(16)`
#define `x.name`_END_ADDR 0x`(x.endAddr - 1).toString(16)`

% idx++
% });
% }
// C29x SSU initialization function prototypes
void Interrupt_SSU_Init();
void DLT_SSU_EnableLinkPermissions();