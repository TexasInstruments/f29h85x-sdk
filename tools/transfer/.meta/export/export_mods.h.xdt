/*
 * Copyright (c) 2020 Texas Instruments Incorporated - http://www.ti.com
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */

#ifndef INCLUDE_EXPORTMODS_H_
#define INCLUDE_EXPORTMODS_H_

% let exportMod = system.modules["/utilities/transfer/exporter.js"];
% let expInst = exportMod.$instances[0]
%
#include <stdbool.h>
#include <stdint.h>
#include <export/export.h>
% if (expInst.packageMode == "JSON") {
#include <export/export_json.h>
% }
% let exportCommon = system.getScript("/utilities/transfer/export/export_mods_common.js");

% if (expInst.mode.includes("Bidirectional")) {
    % var modInstanceCount = 0;
    % for (var modName of exportCommon.getExportModModuleNames()) {
        % let mod = system.modules["/driverlib/" + modName + ".js"];
        % var modInstances = exportCommon.getNonExporterInstances(mod);
        % modInstanceCount += modInstances.length;
    %}
#define EXPORTMOD_RXCOMMANDS_SIZE   `modInstanceCount`
extern const ExportKeyHandler EXPORTMOD_RXCommands[EXPORTMOD_RXCOMMANDS_SIZE];
extern void EXPORTMOD_sendRegisters();
% }

%   let exportCommonTemplate = system.getTemplate("/utilities/transfer/export/export_mods_common.xdt");
% for (var modName of exportCommon.getExportModModuleNames()) {
`exportCommonTemplate("h", modName)`
% }
% for (var modName of exportCommon.getExportModModuleNames()) {
    % let exportModTemplate = system.getTemplate("/utilities/transfer/export/mods/export_mod_" + modName + ".xdt");
    % if (exportModTemplate) {
`exportModTemplate("h")`
    % }
% }

#endif /* INCLUDE_EXPORTMODS_H_ */
