import{r as s,g as e}from"./p-84e39b72.js";import{UsbTransport as t}from"../gc-transport-usb/lib/UsbTransport";import{c as i}from"./p-0c6e1a4c.js";import{ServicesRegistry as r}from"../gc-core-services/lib/ServicesRegistry";import{targetConfigServiceType as c}from"../gc-service-target-config/lib/TargetConfigService";import{createPropertyAutoFill as o}from"../gc-core-assets/lib/GcDesigner";const a=r.getService(c);let n=class{constructor(e){s(this,e);this.impl=undefined;this.propertyAutoFill=undefined;this.usb=false;this.hid=false;this.defaultBaudRate=9600;this.optional=false}connectedCallback(){this.impl=new t(i(this.el));this.propertyAutoFill=o(this.el);this.propertyAutoFill.register("deviceName",(async()=>(await a.getBoardsAndDevices()).map((s=>s.id))))}disconnectedCallback(){this.propertyAutoFill.unregister("deviceName");this.impl.dispose()}get el(){return e(this)}};export{n as gc_transport_usb};
//# sourceMappingURL=p-160c6128.entry.js.map