import{r as e,g as i}from"./p-84e39b72.js";import{ServicesRegistry as t}from"../gc-core-services/lib/ServicesRegistry";import{targetConfigServiceType as s}from"../gc-service-target-config/lib/TargetConfigService";import{createPropertyAutoFill as r}from"../gc-core-assets/lib/GcDesigner";const c=t.getService(s);let a=class{constructor(i){e(this,i);this.propertyAutoFill=undefined;this.sram=false}connectedCallback(){this.propertyAutoFill=r(this.el);this.propertyAutoFill.register("deviceName",(async()=>(await c.getBoardsAndDevices()).map((e=>e.id))))}disconnectedCallback(){this.propertyAutoFill.unregister("deviceName")}get el(){return i(this)}};export{a as gc_target_device_programmable};
//# sourceMappingURL=p-d86575e0.entry.js.map