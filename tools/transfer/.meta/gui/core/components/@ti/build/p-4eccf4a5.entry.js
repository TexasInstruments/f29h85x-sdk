import{r as e,c as t,h as i}from"./p-ce1dc307.js";const s=':host{font-family:"Roboto", "Franklin Gothic Medium", Tahoma, sans-serif;display:inline-block;outline:none}:host .slider{background-color:#555555}:host .slider:before{background-color:#ffffff}:host input:checked+.slider{background-color:#007c8c}:host .container,:host .slider{cursor:pointer}.container{display:flex;align-items:center;outline:none}.container .labelWhenChecked,.container .label{margin-left:10px}.switch{display:inline-block;position:relative;width:40px;height:24px}.switch input{opacity:0;display:none;width:0;height:0}.switch .slider{position:absolute;display:flex;align-items:center;top:0;left:0;right:0;bottom:0;border-radius:34px;-webkit-transition:0.4s;transition:0.4s}.switch .slider:before{position:absolute;border-radius:50%;content:"";height:16px;width:16px;left:4px;-webkit-transition:0.4s;transition:0.4s}.switch input:checked+.slider:before{-webkit-transform:translateX(16px);-ms-transform:translateX(16px);transform:translateX(16px)}:host([label-when-checked]:not([label-when-checked=""])) .labelContainer{display:grid}:host([label-when-checked]:not([label-when-checked=""])) .label,:host([label-when-checked]:not([label-when-checked=""])) .labelWhenChecked{white-space:nowrap;grid-row-start:1;grid-column-start:1}:host([label-when-checked]:not([label-when-checked=""])[checked]) .label{visibility:hidden}:host([label-when-checked]:not([label-when-checked=""]):not([checked])) .labelWhenChecked{visibility:hidden}@keyframes focus-shadow{from{box-shadow:0 0 0 3px #9ed6df}to{box-shadow:0 0 0 3px rgba(158, 214, 223, 0.25)}}:host(:not([disabled])) .container:focus .slider{animation:focus-shadow linear 1s infinite alternate}:host([disabled]){cursor:not-allowed;opacity:0.5}:host([disabled]) .slider,:host([disabled]) input:checked+.slider{background-color:#555555}:host([disabled]) .container,:host([disabled]) .slider{cursor:not-allowed}';let n=class{constructor(i){e(this,i);this.tiChange=t(this,"tiChange",7);this.label="Check";this.checked=false;this.tooltip="";this.disabled=false}render(){return i("div",{class:"container",tabindex:"0",title:this.tooltip},i("label",{class:"switch"},i("input",{type:"checkbox",checked:this.checked,tabindex:"0"}),i("span",{class:"slider",onClick:e=>e.preventDefault()})),this.renderLabels())}renderLabels(){return this.labelWhenChecked?i("div",{class:"labelContainer"},i("div",{class:"label"}," ",this.label),i("div",{class:"labelWhenChecked"},this.labelWhenChecked)):this.label?i("div",{class:"label"},this.label):undefined}onClick(){if(!this.disabled){this.checked=!this.checked}}onKeydown(e){if(e.keyCode===32){e.preventDefault();this.checked=!this.checked}}handleCheckChanged(e){this.tiChange.emit({checked:e})}static get watchers(){return{checked:["handleCheckChanged"]}}};n.style=s;export{n as ti_toggle_switch};
//# sourceMappingURL=p-4eccf4a5.entry.js.map