%%{
    let inst      = args[0];
    let tileName  = args[1];
    let instNum   = args[2];
    let inputs    = args[3];
    let tile_insts= args[4];
    let name      = tileName + "_OUTLUT_" + instNum;
    let Common    = system.getScript("/clb_syscfg/source/Common.js");
    let colonName = Common.colonName;
    let eqn       = 'out = ' + inst.eqn.replace(/&/g,'&amp;');
    let color     = 'green';
    if (!Common.used(inst, inputs)) return;
%%}
    `name` [label= <<TABLE BORDER='0' CELLBORDER='1' CELLSPACING='0'>
                       <TR><TD PORT='i0'>i0</TD><TD ROWSPAN='4'><b>`name`</b><br/><br/>`eqn`</TD></TR>
                       <TR><TD PORT='i1'>i1</TD><TD PORT='out'>out</TD></TR>
                       <TR><TD PORT='i2'>i2</TD></TR>
                   </TABLE>> color=`color` shape=plaintext]
    %if ((!Common.isType1_Type2()) || ((instNum == 0) && tile_insts.AOC_0.bypass_mux)) {
    `name`:out:e -> `tileName`_BOUNDARY_OUT:out`instNum`:w [color=black]
    %}
    %else if ((!Common.isType1_Type2()) || ((instNum == 1) && tile_insts.AOC_1.bypass_mux)) {
    `name`:out:e -> `tileName`_BOUNDARY_OUT:out`instNum`:w [color=black]
    %}
    %else if ((!Common.isType1_Type2()) || ((instNum == 2) && tile_insts.AOC_2.bypass_mux)) {
    `name`:out:e -> `tileName`_BOUNDARY_OUT:out`instNum`:w [color=black]
    %}
    %else if ((!Common.isType1_Type2()) || ((instNum == 3) && tile_insts.AOC_3.bypass_mux)) {
    `name`:out:e -> `tileName`_BOUNDARY_OUT:out`instNum`:w [color=black]
    %}
    %else if ((!Common.isType1_Type2()) || ((instNum == 4) && tile_insts.AOC_4.bypass_mux)) {
    `name`:out:e -> `tileName`_BOUNDARY_OUT:out`instNum`:w [color=black]
    %}
    %else if ((!Common.isType1_Type2()) || ((instNum == 5) && tile_insts.AOC_5.bypass_mux)) {
    `name`:out:e -> `tileName`_BOUNDARY_OUT:out`instNum`:w [color=black]
    %}
    %else if ((!Common.isType1_Type2()) || ((instNum == 6) && tile_insts.AOC_6.bypass_mux)) {
    `name`:out:e -> `tileName`_BOUNDARY_OUT:out`instNum`:w [color=black]
    %}
    %else if ((!Common.isType1_Type2()) || ((instNum == 7) && tile_insts.AOC_7.bypass_mux)) {
    `name`:out:e -> `tileName`_BOUNDARY_OUT:out`instNum`:w [color=black]
    %}

    % for (let j = 0; j < inputs.length; ++j) {
    %     let inName = inputs[j];
    %     let inFrom = inst[inName];
    %     if (inFrom != '0') {
    `tileName`_`colonName(inFrom)`:e -> `name`:`inName`:w [color=`color`]
    %     }
    % }