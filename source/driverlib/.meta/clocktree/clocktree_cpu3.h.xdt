%%{
let clocktree_common   	= system.getScript("/driverlib/.meta/clocktree/clocktree_common.js");
let Common   		= system.getScript("/driverlib/Common.js");

var clockTree_CPU3 	= Common.getClockTree();
var DualCore_CPU3 	= clocktree_common.DualCore_CPU3;
var TriCore_CPU3 	= clocktree_common.TriCore_CPU3;

const multi_core 	= clocktree_common.multi_core;
const dual_core = clocktree_common.dual_core;
const tri_core = clocktree_common.tri_core;
const PLL_type1  	= clocktree_common.PLL_type1;
const PLL_type2  	= clocktree_common.PLL_type2;
const device  		= clocktree_common.device;
%%}
//#############################################################################
//
// FILE:   clockTree.h
//
// TITLE:  Setups device clocking for examples.
//
//#############################################################################
// $Copyright:
// Copyright (C) `new Date().getFullYear()` Texas Instruments Incorporated - http://www.ti.com
//
// Redistribution and use in source and binary forms, with or without 
// modification, are permitted provided that the following conditions 
// are met:
// 
//   Redistributions of source code must retain the above copyright 
//   notice, this list of conditions and the following disclaimer.
// 
//   Redistributions in binary form must reproduce the above copyright
//   notice, this list of conditions and the following disclaimer in the 
//   documentation and/or other materials provided with the   
//   distribution.
// 
//   Neither the name of Texas Instruments Incorporated nor the names of
//   its contributors may be used to endorse or promote products derived
//   from this software without specific prior written permission.
// 
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT 
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT 
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT 
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT 
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE 
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// $
//###########################################################################

#ifndef CLOCKTREE_H
#define CLOCKTREE_H

%
% if (clockTree_CPU3!=null){            // If we can't get clock tree, CPU1 context is probably not open
% let context    =   system.contexts["CPU1"]
% let sysclk  =   context.system.clockTree["PLLSYSCLK"].out
% sysclk *= Math.pow(10,6)
#define DEVICE_SYSCLK_FREQ		`sysclk`
%

#endif // CLOCKTREE_H
% } else {

//
// CANNOT ACCESS CLOCKTREE. PLEASE MAKE SURE TO OPEN BOTH CPU1 AND CPU3 in SYSCONFIG.
//

#define DEVICE_SYSCLK_FREQ		200000000 // Default MAX SYSCLK

#endif // CLOCKTREE_H
%}
